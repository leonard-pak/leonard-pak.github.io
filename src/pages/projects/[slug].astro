---
import Icon from "@components/Icon.astro";
import BaseLayout from "@layouts/BaseLayout.astro";
import createSlug from "@lib/createSlug";
import displayDate from "@lib/displayDate";
import { Image } from "astro:assets";
import { getCollection, type CollectionEntry } from "astro:content";

export async function getStaticPaths() {
  const projectEntries = await getCollection("projects");
  return projectEntries.map((entry) => ({
    params: { slug: createSlug(entry.data.title, entry.slug) },
    props: { entry },
  }));
}

interface Props {
  entry: CollectionEntry<"projects">;
}

const { entry } = Astro.props;
const {
  title,
  description,
  pubDate,
  publication_links,
  heroImage,
  tags = [],
} = entry.data;
const { Content } = await entry.render();

const date = displayDate(pubDate, "ru");
---

<BaseLayout
  title={title}
  description={description}
  image={heroImage}
  sideBarActiveItemID="projects"
  ogType="article"
>
  <main class="md:flex md:justify-center">
    <article
      class="prose prose-lg max-w-[750px] prose-img:mx-auto prose-img:rounded-lg"
    >
      <div class="flex flex-col items-center text-center">
        {
          pubDate && (
            <time class="self-start text-sm opacity-75 font-semibold">
              {date}
            </time>
          )
        }
        <h1 class="font-bold">{title}</h1>

        <div class="flex flex-row flex-wrap justify-center gap-y-3 gap-x-2">
          {
            publication_links &&
              publication_links.map(({ name, url, icon }) => (
                <a
                  class="btn btn-neutral btn-sm rounded-badge"
                  href={url}
                  target="_blank"
                  aria-label={name}
                  title={name}
                >
                  <Icon name={icon} size={18} />
                  {name}
                </a>
              ))
          }
        </div>

        {
          heroImage && (
            <Image
              width={750}
              height={422}
              format="webp"
              src={heroImage}
              alt={title}
              class="w-full mb-6"
            />
          )
        }
      </div>
      <Content />
      <div class="flex flex-row flex-wrap justify-center gap-y-2 gap-x-1">
        {
          tags &&
            tags.map((tag) => (
              <a
                href={`/projects/tag/${tag}`}
                class="badge badge-outline no-underline"
              >
                {tag}
              </a>
            ))
        }
      </div>
    </article>
  </main>
</BaseLayout>
